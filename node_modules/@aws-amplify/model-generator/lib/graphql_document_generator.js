import { generateStatements } from '@aws-amplify/graphql-generator';
/**
 * Generates GraphQL documents for a given AppSync API
 */
export class AppSyncGraphqlDocumentGenerator {
    fetchSchema;
    resultBuilder;
    /**
     * Configures the AppSyncGraphqlDocumentGenerator
     */
    constructor(fetchSchema, resultBuilder) {
        this.fetchSchema = fetchSchema;
        this.resultBuilder = resultBuilder;
    }
    generateModels = async ({ targetFormat, maxDepth, typenameIntrospection, relativeTypesPath, }) => {
        const schema = await this.fetchSchema();
        if (!schema) {
            // eslint-disable-next-line amplify-backend-rules/prefer-amplify-errors
            throw new Error('Invalid schema');
        }
        const generatedStatements = generateStatements({
            schema,
            target: targetFormat,
            maxDepth,
            typenameIntrospection,
            relativeTypesPath,
        });
        return this.resultBuilder(generatedStatements);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhxbF9kb2N1bWVudF9nZW5lcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ3JhcGhxbF9kb2N1bWVudF9nZW5lcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFPcEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sK0JBQStCO0lBT2hDO0lBQ0E7SUFMVjs7T0FFRztJQUNILFlBQ1UsV0FBa0MsRUFDbEMsYUFFYTtRQUhiLGdCQUFXLEdBQVgsV0FBVyxDQUF1QjtRQUNsQyxrQkFBYSxHQUFiLGFBQWEsQ0FFQTtJQUNwQixDQUFDO0lBQ0osY0FBYyxHQUFHLEtBQUssRUFBRSxFQUN0QixZQUFZLEVBQ1osUUFBUSxFQUNSLHFCQUFxQixFQUNyQixpQkFBaUIsR0FDWSxFQUFFLEVBQUU7UUFDakMsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFeEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLHVFQUF1RTtZQUN2RSxNQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDbkM7UUFFRCxNQUFNLG1CQUFtQixHQUFHLGtCQUFrQixDQUFDO1lBQzdDLE1BQU07WUFDTixNQUFNLEVBQUUsWUFBWTtZQUNwQixRQUFRO1lBQ1IscUJBQXFCO1lBQ3JCLGlCQUFpQjtTQUNsQixDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUNqRCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlU3RhdGVtZW50cyB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9ncmFwaHFsLWdlbmVyYXRvcic7XG5pbXBvcnQge1xuICBEb2N1bWVudEdlbmVyYXRpb25QYXJhbWV0ZXJzLFxuICBHZW5lcmF0aW9uUmVzdWx0LFxuICBHcmFwaHFsRG9jdW1lbnRHZW5lcmF0b3IsXG59IGZyb20gJy4vbW9kZWxfZ2VuZXJhdG9yLmpzJztcblxuLyoqXG4gKiBHZW5lcmF0ZXMgR3JhcGhRTCBkb2N1bWVudHMgZm9yIGEgZ2l2ZW4gQXBwU3luYyBBUElcbiAqL1xuZXhwb3J0IGNsYXNzIEFwcFN5bmNHcmFwaHFsRG9jdW1lbnRHZW5lcmF0b3JcbiAgaW1wbGVtZW50cyBHcmFwaHFsRG9jdW1lbnRHZW5lcmF0b3JcbntcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgdGhlIEFwcFN5bmNHcmFwaHFsRG9jdW1lbnRHZW5lcmF0b3JcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZmV0Y2hTY2hlbWE6ICgpID0+IFByb21pc2U8c3RyaW5nPixcbiAgICBwcml2YXRlIHJlc3VsdEJ1aWxkZXI6IChcbiAgICAgIGZpbGVNYXA6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4sXG4gICAgKSA9PiBHZW5lcmF0aW9uUmVzdWx0LFxuICApIHt9XG4gIGdlbmVyYXRlTW9kZWxzID0gYXN5bmMgKHtcbiAgICB0YXJnZXRGb3JtYXQsXG4gICAgbWF4RGVwdGgsXG4gICAgdHlwZW5hbWVJbnRyb3NwZWN0aW9uLFxuICAgIHJlbGF0aXZlVHlwZXNQYXRoLFxuICB9OiBEb2N1bWVudEdlbmVyYXRpb25QYXJhbWV0ZXJzKSA9PiB7XG4gICAgY29uc3Qgc2NoZW1hID0gYXdhaXQgdGhpcy5mZXRjaFNjaGVtYSgpO1xuXG4gICAgaWYgKCFzY2hlbWEpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBhbXBsaWZ5LWJhY2tlbmQtcnVsZXMvcHJlZmVyLWFtcGxpZnktZXJyb3JzXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2NoZW1hJyk7XG4gICAgfVxuXG4gICAgY29uc3QgZ2VuZXJhdGVkU3RhdGVtZW50cyA9IGdlbmVyYXRlU3RhdGVtZW50cyh7XG4gICAgICBzY2hlbWEsXG4gICAgICB0YXJnZXQ6IHRhcmdldEZvcm1hdCxcbiAgICAgIG1heERlcHRoLFxuICAgICAgdHlwZW5hbWVJbnRyb3NwZWN0aW9uLFxuICAgICAgcmVsYXRpdmVUeXBlc1BhdGgsXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5yZXN1bHRCdWlsZGVyKGdlbmVyYXRlZFN0YXRlbWVudHMpO1xuICB9O1xufVxuIl19