import { ClientConfigFormat, } from '../client-config-types/client_config.js';
/**
 * Formats client config to desired format
 */
export class ClientConfigFormatterDefault {
    /**
     * Creates new client config formatter.
     */
    constructor() { }
    format = (clientConfig, format) => {
        switch (format) {
            case ClientConfigFormat.DART: {
                // Using raw string, i.e. r''' to disable Dart's interpolations
                // because we're using special characters like $ in some outputs.
                return `const amplifyConfig = r'''${JSON.stringify(clientConfig, null, 2)}''';`;
            }
            case ClientConfigFormat.JSON:
                return JSON.stringify(clientConfig, null, 2);
            default:
                throw new Error(`Unsupported client config format ${format} for client config`);
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50X2NvbmZpZ19mb3JtYXR0ZXJfZGVmYXVsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGllbnQtY29uZmlnLXdyaXRlci9jbGllbnRfY29uZmlnX2Zvcm1hdHRlcl9kZWZhdWx0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxrQkFBa0IsR0FDbkIsTUFBTSx5Q0FBeUMsQ0FBQztBQUdqRDs7R0FFRztBQUNILE1BQU0sT0FBTyw0QkFBNEI7SUFDdkM7O09BRUc7SUFDSCxnQkFBZSxDQUFDO0lBRWhCLE1BQU0sR0FBRyxDQUFDLFlBQTBCLEVBQUUsTUFBMEIsRUFBVSxFQUFFO1FBQzFFLFFBQVEsTUFBTSxFQUFFO1lBQ2QsS0FBSyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDNUIsK0RBQStEO2dCQUMvRCxpRUFBaUU7Z0JBQ2pFLE9BQU8sNkJBQTZCLElBQUksQ0FBQyxTQUFTLENBQ2hELFlBQVksRUFDWixJQUFJLEVBQ0osQ0FBQyxDQUNGLE1BQU0sQ0FBQzthQUNUO1lBQ0QsS0FBSyxrQkFBa0IsQ0FBQyxJQUFJO2dCQUMxQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMvQztnQkFDRSxNQUFNLElBQUksS0FBSyxDQUNiLG9DQUFvQyxNQUFNLG9CQUFvQixDQUMvRCxDQUFDO1NBQ0w7SUFDSCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENsaWVudENvbmZpZyxcbiAgQ2xpZW50Q29uZmlnRm9ybWF0LFxufSBmcm9tICcuLi9jbGllbnQtY29uZmlnLXR5cGVzL2NsaWVudF9jb25maWcuanMnO1xuaW1wb3J0IHsgQ2xpZW50Q29uZmlnRm9ybWF0dGVyIH0gZnJvbSAnLi9jbGllbnRfY29uZmlnX2Zvcm1hdHRlci5qcyc7XG5cbi8qKlxuICogRm9ybWF0cyBjbGllbnQgY29uZmlnIHRvIGRlc2lyZWQgZm9ybWF0XG4gKi9cbmV4cG9ydCBjbGFzcyBDbGllbnRDb25maWdGb3JtYXR0ZXJEZWZhdWx0IGltcGxlbWVudHMgQ2xpZW50Q29uZmlnRm9ybWF0dGVyIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgbmV3IGNsaWVudCBjb25maWcgZm9ybWF0dGVyLlxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGZvcm1hdCA9IChjbGllbnRDb25maWc6IENsaWVudENvbmZpZywgZm9ybWF0OiBDbGllbnRDb25maWdGb3JtYXQpOiBzdHJpbmcgPT4ge1xuICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICBjYXNlIENsaWVudENvbmZpZ0Zvcm1hdC5EQVJUOiB7XG4gICAgICAgIC8vIFVzaW5nIHJhdyBzdHJpbmcsIGkuZS4gcicnJyB0byBkaXNhYmxlIERhcnQncyBpbnRlcnBvbGF0aW9uc1xuICAgICAgICAvLyBiZWNhdXNlIHdlJ3JlIHVzaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBsaWtlICQgaW4gc29tZSBvdXRwdXRzLlxuICAgICAgICByZXR1cm4gYGNvbnN0IGFtcGxpZnlDb25maWcgPSByJycnJHtKU09OLnN0cmluZ2lmeShcbiAgICAgICAgICBjbGllbnRDb25maWcsXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICAyLFxuICAgICAgICApfScnJztgO1xuICAgICAgfVxuICAgICAgY2FzZSBDbGllbnRDb25maWdGb3JtYXQuSlNPTjpcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGNsaWVudENvbmZpZywgbnVsbCwgMik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFVuc3VwcG9ydGVkIGNsaWVudCBjb25maWcgZm9ybWF0ICR7Zm9ybWF0fSBmb3IgY2xpZW50IGNvbmZpZ2AsXG4gICAgICAgICk7XG4gICAgfVxuICB9O1xufVxuIl19